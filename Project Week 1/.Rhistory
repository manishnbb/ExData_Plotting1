2+2
mean(mtcars$mpg)
setwd("~/")
pwd
install.packages("ggplot2")
version
sessionInfo()
help(package = "ggplot2")
install.packages("devtools")
browseVignettes("ggplot2")
browseVignettes("ggplot2")
installed.packages("KernSmooth")
library(ggplot2)
library(devtools)
install.packages("devtools")
library(devtools)
library(ggplot2)
install.packages(c("ggplot2", "devtools", "lme4"))
install.packages(c("ggplot2", "devtools", "lme4"))
library(devtools)
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("R Programming")
swirl()
TRUE==TRUE
(TRUE==TRUE) == FALSE
(FALSE==TRUE) == FALSE
6==7
6<7
10<=10
TRUE != FALSE
5 != 7
!TRUE
5==7
!(5==7)
FALSE & FALSE
TRUE & TRUE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(int<0)
any(ints<0)
all(ints>0)
setwd("C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\")
pollution
pollution <- read.csv("./data/avgpm25.csv", colClasses = c("numeric", "character", "factor", "numeric", "numeric"))
pollution
colnames(pollution) <- c("pm25", "fips", "region", "longitude", "latitude")
head(pollution)
summary(pollution$pm25)
boxplot(pollution$pm25, col = "blue")
hist(pollution$pm25, col = "green")
rug(pollution$pm25)
hist(pollution$pm25, col = "green")
rug(pollution$pm25)
hist(pollution$pm25, col = "green", breaks = 100)
rug(pollution$pm25)
boxplot(pollution$pm25, col = "blue")
abline(h = 12)
hist(pollution$pm25, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(pollution$pm25), col = "magenta", lwd = 4)
barplot(table(pollution$region), col = "wheat", main = "Number of Counties in Each Region")
abline(v = median(pollution$pm25), col = "magenta", lwd = 4)
barplot(table(pollution$region), col = "wheat", main = "Number of Counties in Each Region")
table(pollution$region)
pollution$region
table(pollution$region
table(pollution$region)
table(pollution$region)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
par(mfrow = c(1, 1), mar = c(4, 4, 2, 1))
hist(subset(pollution, region == "east")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
with(pollution, plot(latitude, pm25, col = region))
abline(h = 12, lwd = 2, lty = 2)
library(datasets)
data(cars)
with(cars, plot(speed, dist))
library(lattice)
state.x77
state.region
state <- data.frame(state.x77, region = state.region)
state
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
table(stste$region)
table(state$region)
data(mpg)
library(ggplot2)
data(mpg)
mpg
qplot(displ, hwy, data = mpg)
library(datasets)
hist(airquality$Ozone) ## Draw a new plot
library(datasets)
with(airquality, plot(Wind, Ozone))
hist(airquality$Ozone) ## Draw a new plot
library(datasets)
with(airquality, plot(Wind, Ozone))
library(datasets)
airquality
transform(airquality, Month = factor(Month))
options(max.print=100)
transform(airquality, Month = factor(Month))
airquality
factor(Month)
airquality <- transform(airquality, Month = factor(Month))
airquality
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
library(datasets)
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City") ## Add a title
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City") ## Add a title
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
subset(airquality, Month == 5)
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City") ## Add a title
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City",type = "n"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "blue"))
with(subset(airquality, Month != 5), points(Wind, Ozone, col = "red"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
model
abline(model, lwd = 2)
plot(Wind, Ozone, main = "Ozone and Wind")
par(mfrow = c(1, 2))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, {
plot(Wind, Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
plot(Temp, Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
})
par(mfrow = c(1, 1), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 2)
x<- rnorm(100)
hist(x)
y<- rnorm(100)
plot(x,y)
par(mar=c(2,2,2,2)) # to change the margin in side of the plot
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y, pch=20) # solid circle
plot(x,y)
plot(x,y, pch=20) # solid circle
example(points)
plot(x,y, pch=20) # solid circle
x<- rnorm(100)
hist(x)
y<- rnorm(100)
plot(x,y)
par(mar=c(4,4,2,2)) # to show labels
plot(x,y, pch=20) # solid circle
title("Scatterplot")
text(-2, -2, "Label")
legend("topleft", legend = "Data", pch=20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd=3)
abline(fit)
legend("topleft", legend = "Data", pch=20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd=3)
abline(fit, lwd=3, col="blue")
abline(fit, lwd=3, col="blue", xlab="weight", ylab="height")
abline(fit, lwd=3, col="blue", xlab="weight", ylab="height")
abline(x,y, xlab="weight", ylab="height")
plot(x,y, xlab="weight", ylab="height")
plot(x,y, xlab="weight", ylab="height", main="Scatterplot")
plot(x,y, xlab="weight", ylab="height", main="Scatterplot", pch=20)
legend("topright", legend = "Data", pch=20)
fit <- lm(y~x)
abline(fit, lwd=3, col="red")
z<- rpois(100,2)
list=ls()
ls()
rm(list=ls())
ls()
readline()
cons<-read.table('C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\Project\\exdata_data_household_power_consumption\\household_power_consumption.txt',sep=";",nrows= 2075260, header=TRUE, quote= "", strip.white=TRUE, stringsAsFactors = FALSE, na.strings= "?")
cons$Date
sub<- subset(cons, (cons$Date == "1/2/2007" | cons$Date== "2/2/2007"))
sub$Date <- as.Date(sub$Date, format = "%d/%m/%Y")
sub$Date
readline()
setwd("C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\Project\\Github-clone\\ExData_Plotting1\\Project Submission\\")
png("plot1.png", width = 480, height = 480)
hist(sub$Global_active_power, type="l", main="Global Active Power",col='red',ylab= "Frequency", xlab="Global Active Power(kilowatts)")
setwd("C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\")
png("plot1.png", width = 480, height = 480)
hist(sub$Global_active_power, type="l", main="Global Active Power",col='red',ylab= "Frequency", xlab="Global Active Power(kilowatts)")
dev.off()
setwd("C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\Project\\Github-clone\\ExData_Plotting1\\Project Submission\\")
png("plot1.png", width = 480, height = 480)
hist(sub$Global_active_power, type="l", main="Global Active Power",col='red',ylab= "Frequency", xlab="Global Active Power(kilowatts)")
dev.off()
sub$Date
sub$Time
sub$DateTime <- as.POSIXct(paste(sub$Date, sub$Time))
sub$DateTime
png("plot2.png", width = 480, height = 480)
plot(sub$DateTime, sub$Global_active_power, type="l", ylab= "Global Active Power(kilowatts)", xlab="")
dev.off()
dev.off()
rm(list=ls())
cons<-read.table('C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\Project\\exdata_data_household_power_consumption\\household_power_consumption.txt',sep=";",nrows= 2075260, header=TRUE, quote= "", strip.white=TRUE, stringsAsFactors = FALSE, na.strings= "?")
sub<- subset(cons, (cons$Date == "1/2/2007" | cons$Date== "2/2/2007"))
sub$Date <- as.Date(sub$Date, format = "%d/%m/%Y")
sub$DateTime <- as.POSIXct(paste(sub$Date, sub$Time))
png("plot2.png", width = 480, height = 480)
plot(sub$DateTime, sub$Global_active_power, type="l", ylab= "Global Active Power(kilowatts)", xlab="")
dev.off()
cons<-read.table('C:\\Users\\Manish\\Desktop\\3-Exploratory Analysis\\Week 1\\Project\\exdata_data_household_power_consumption\\household_power_consumption.txt',sep=";",nrows= 2075260, header=TRUE, quote= "", strip.white=TRUE, stringsAsFactors = FALSE, na.strings= "?")
sub<- subset(cons, (cons$Date == "1/2/2007" | cons$Date== "2/2/2007"))
sub$Date <- as.Date(sub$Date, format = "%d/%m/%Y")
sub$DateTime <- as.POSIXct(paste(sub$Date, sub$Time))
png("plot3.png", width = 480, height = 480)
plot(sub$DateTime, sub$Sub_metering_1, type="l", ylab= "Energy sub metering", xlab="")
lines(sub$DateTime, sub$Sub_metering_2, type="l", col="red")
lines(sub$DateTime, sub$Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, col=c("black", "red", "blue"))
dev.off()
png("plot4.png", width = 480, height = 480)
par(mfcol=c(2,2))
plot(sub$DateTime, sub$Global_active_power, type="l", ylab= "Global Active Power", xlab="")
plot(sub$DateTime, sub$Sub_metering_1, type="l", ylab= "Energy sub metering", xlab="")
lines(sub$DateTime, sub$Sub_metering_2, type="l", col="red")
lines(sub$DateTime, sub$Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, col=c("black", "red", "blue"))
plot(sub$DateTime,sub$Voltage,type="l",ylab="Voltage",xlab="datetime")
plot(sub$DateTime,sub$Global_reactive_power,type='l',xlab="datetime",ylab="Global_reactive_power")
dev.off()
